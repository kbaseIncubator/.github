---
name: Build & Push Image to GHCR
on:
    workflow_call:
        inputs:
            name:
                description: The image name
                required: true
                type: string
            tags:
                description: The image tags
                required: true
                type: string
            platforms:
                description: The platforms for which the Docker image should be built. If not specified, defaults to linux/amd64.
                required: false
                type: string
                default: "linux/amd64"
jobs:
    build-push-image:
        runs-on: ubuntu-latest
        steps:
            - name: Check out GitHub Repo
              uses: actions/checkout@v4

            - name: Get current date
              id: date
              run: echo "date=$(date -u +'%Y-%m-%dT%H:%M:%SZ')" >> $GITHUB_OUTPUT

            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3

            - name: Set up Docker Buildx
              uses: docker/setup-buildx-action@v3

            - name: Login to GHCR
              uses: docker/login-action@v3
              with:
                  registry: ghcr.io
                  username: "${{ secrets.GHCR_USERNAME }}"
                  password: "${{ secrets.GHCR_TOKEN }}"

            - name: Create github action tags from image tags
              id: tags
              uses: actions/github-script@v6
              with:
                  result-encoding: string
                  script: |
                      const tags = '${{ inputs.tags }}'.split(',');
                      const username = '${{ github.event.repository.owner.login }}';
                      const repoName = '${{ inputs.name }}';
                      return tags.map((tag) => {
                        return `ghcr.io/${username}/${repoName}:${tag}`;
                      }).join(',');

            - name: Build and push
              uses: docker/build-push-action@v3
              with:
                  context: .
                  file: ./Dockerfile
                  pull: true
                  push: true
                  platforms: "${{ inputs.platforms }}"
                  build-args: |
                      BUILD_DATE=${{ steps.date.outputs.date }}
                      VCS_REF=${{ github.sha }}
                      BRANCH='${{ github.ref }}'
                      TAG='${{ github.ref }}'
                  tags: "${{ steps.tags.outputs.result }}"
